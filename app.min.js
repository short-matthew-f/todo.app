let pendingTodos,completedTodos,expiredTodos,allTodos;function createTodoFromForm(o){const e=new Date(o.find("#todo-due-date").val());return{title:o.find("#todo-title").val(),dueDate:e.toLocaleString(),description:o.find("#todo-description").val(),isComplete:!1}}function createElementFromTodo(o){const e=$('<div class="todo">'),t=$("<h3>").append($('<span class="title">').text(o.title),$('<span class="due-date">').text(o.dueDate)),n=$("<pre>").append(o.description.trim()),d=$(`<footer class="actions">\n    ${o.isComplete?"":'<button class="action complete">Complete</button>'}\n    <button class="action delete">Delete</button>\n  </footer>`);return e.append(t,n,d),e}function storeData(){localStorage.setItem("allTodos",JSON.stringify(allTodos))}function retrieveData(){allTodos=JSON.parse(localStorage.getItem("allTodos"))||fetchOnboardingTodos()}function fetchOnboardingTodos(){let o=new Date;return o.setDate(o.getDate()+1),[{title:"Open the left drawer",dueDate:o.toLocaleString(),description:"Click on the left below the icons to expand the left drawer\n\nWhen you're done, click complete on this todo.",isComplete:!1},{title:"Make a new Todo",dueDate:o.toLocaleString(),description:"Click the plus symbol\n\nThen, fill out the form that pops up and click CREATE",isComplete:!1},{title:"Make an expired Todo",dueDate:o.toLocaleString(),description:"Click the plus symbol\n\nThen, fill out the form that pops up and click CREATE\n\nMake sure to use a date in the past!",isComplete:!1},{title:"Clear completed or expired Todos",dueDate:o.toLocaleString(),description:"The checkmark and sweep symbols are for clearing completed or expired todos, respectively.\n\nUse them now.",isComplete:!1}]}function splitTodos(){pendingTodos=allTodos.filter(function(o){return!o.isComplete&&isCurrent(o)}),completedTodos=allTodos.filter(function(o){return o.isComplete}),expiredTodos=allTodos.filter(function(o){return!o.isComplete&&!isCurrent(o)})}function drawTodos(){$("main .content").empty(),pendingTodos.forEach(function(o){$(".pending-todos").append(createElementFromTodo(o).data("todo",o))}),completedTodos.forEach(function(o){$(".completed-todos").append(createElementFromTodo(o).data("todo",o))}),expiredTodos.forEach(function(o){$(".expired-todos").append(createElementFromTodo(o).data("todo",o))})}function isCurrent(o){return Date.parse(o.dueDate)>Date.now()}$(".left-drawer").click(function(o){$(o.target).hasClass("left-drawer")&&$("#app").toggleClass("drawer-open")}),$(".add-todo").click(function(){$(".modal").addClass("open")}),$(".remove-completed").click(function(){allTodos=allTodos.filter(function(o){return!o.isComplete}),storeData(),splitTodos(),drawTodos()}),$(".remove-expired").click(function(){allTodos=allTodos.filter(function(o){return isCurrent(o)}),storeData(),splitTodos(),drawTodos()}),$(".create-todo").click(function(o){o.preventDefault();const e=$(".todo-form"),t=createTodoFromForm(e);allTodos.unshift(t),e.trigger("reset"),storeData(),splitTodos(),drawTodos(),$(".modal").removeClass("open")}),$(".cancel-create-todo").click(function(o){o.preventDefault(),$(".modal").removeClass("open")}),$("main").on("click",".action.complete",function(){const o=$(this).closest(".todo");o.data("todo").isComplete=!0,o.slideUp(function(){$(".completed-todos").prepend(o),o.find(".action.complete").remove(),o.slideDown(),storeData(),splitTodos(),drawTodos()})}),$("main").on("click",".action.delete",function(){const o=$(this).closest(".todo"),e=o.data("todo");o.slideUp(),allTodos.splice(allTodos.indexOf(e),1),storeData(),splitTodos(),drawTodos()}),retrieveData(),splitTodos(),drawTodos();